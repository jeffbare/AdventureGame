package MonsterFighter;

//import MonsterFighter.EnemyClass;
//import MonsterFighter.HeroClass;
import java.util.Random;
import java.util.Scanner;
import javax.swing.ImageIcon;
import java.util.*;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author JBare
 */
public class GUI_Frame extends javax.swing.JFrame {

    /**
     * Creates new form GUI_Frame
     */
    public GUI_Frame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jButton12 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setText("Hit Points:");

        jLabel2.setText("Total EXP:");

        jLabel3.setText("To Level Up:");

        jLabel8.setText("Hero Name:");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jTextField8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField8ActionPerformed(evt);
            }
        });

        jLabel6.setText("Damage Dealt:");

        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });

        jLabel7.setText("Potions");

        jLabel9.setText("Gold");

        jLabel4.setText("Name:");

        jLabel5.setText("Hit Points");

        jButton5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46))
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel4, jLabel5});

        jPanel4Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jTextField4, jTextField7});

        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextField8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextField6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(14, 14, 14)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE)))))
                        .addGap(74, 74, 74))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 10, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel1, jLabel2, jLabel3, jLabel6, jLabel7, jLabel8, jLabel9});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jTextField1, jTextField2, jTextField3, jTextField5, jTextField6, jTextField8, jTextField9});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton6.setText("START");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setIcon(new javax.swing.ImageIcon("C:\\Users\\JBare\\Documents\\NetBeansProjects\\MonsterFighter\\potion.jpg")); // NOI18N
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setIcon(new javax.swing.ImageIcon("C:\\Users\\JBare\\Documents\\NetBeansProjects\\MonsterFighter\\sword.jpg")); // NOI18N
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton2.setText("W");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("E");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("S");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton1.setText("N");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addGap(2, 2, 2))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jButton1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton1, jButton2, jButton3, jButton4});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4)
                .addContainerGap())
        );

        jButton10.setText("VIEW MAP");

        jButton11.setIcon(new javax.swing.ImageIcon("C:\\Users\\JBare\\Documents\\NetBeansProjects\\MonsterFighter\\bag.jpg")); // NOI18N
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "INVENTORY", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP));
        jPanel3.setOpaque(false);

        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MonsterFighter/Images/key.jpg"))); // NOI18N
        jButton12.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jMenu1.setText("File");

        jMenuItem1.setText("EXIT");
        jMenuItem1.setToolTipText("Click to Exit");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButton9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton8))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton10)
                                    .addComponent(jButton6))
                                .addGap(30, 30, 30)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton10, jButton6});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton8)
                            .addComponent(jButton9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton10))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        if(moveHold == false)
        {
            char newTerrain= map.moveNorth();

            String type = terrainType(newTerrain);
            ImageIcon newi2;



            if((type.toLowerCase()).equals("error"))
            {
                jTextArea1.append("You cannot move farther North!\n");
            }
            else
            {
                newi2 = new ImageIcon(type);
                    jButton7.setIcon(newi2);
            }

            System.out.println("Returned Terrrain: " + newTerrain);
            map.printMap();
            checkAttack();
        }
        else
        {
            jTextArea1.append("You have been attacked and cannot move.\n");
        }
        
        if(attacked)
        {
            //Do attack stuff
            moveHold = true;
            jTextArea1.append("You have been attacked!\n");
            
            attackGame();
            
        }

    }                                        

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
        System.exit(0);
    }                                          

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        //ImageIcon newi = new ImageIcon(newEnemy.getLogo());
    }                                        

    private void jTextField8ActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
        //String name = newHero.getName();
        //jTextField8.setText(String.valueOf(name));
    }                                           

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        //Start Button Stuff
        
        ImageIcon newi, newi2;
        
        //startGame();
        //jPanel3.setVisible(showINV);
        //jButton12.setVisible(hasKey);
        
        
        //map.printMap();             //Print map before change
        
        //map.setPost(tempX, tempY);  //Set starting position
        //map.setPost(2,2);
        //terrain = map.getTerrain(6, 6);
        //terrain = map.getTerrain();
        
        //map.printMap(); 
        
        //eType = CreateEnemy();
        System.out.println("Random enemy number: " + eType);
       
        /*
        if(eType == 1)
        {
            newi = new ImageIcon("impguy.jpg");
            newEnemy = imp;
            jButton5.setIcon(newi);
        }
        else if(eType == 2)
        {
            newi = new ImageIcon("wolfguy.jpg");
            newEnemy = wolf;
            jButton5.setIcon(newi);            
        }
        else if(eType == 3)
        {
            newi = new ImageIcon("ogreguy.jpg");
            newEnemy = ogre;
            jButton5.setIcon(newi);            
        }
        */
        
        
        
        
        
    }                                        

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {                                         
       
    }                                        

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        //This is the POTION button.

        
        
        int health,potionCount;
        int healAmount;
        if(newHero.getPotionCount() > 0)
        {
            
            health = newHero.getHP();
            healAmount = newHero.usePotion();
            potionCount = newHero.getPotionCount();
            
            if((health + healAmount) >= newHero.getMaxHP())
            {
                int currHP = newHero.getHP();
                int maxHP = newHero.getMaxHP();
                
                System.out.println("Current HP: " + currHP);
                System.out.println("Max HP: " + maxHP);
                newHero.setHP();
                System.out.println("HP after set: " + newHero.getHP());
                System.out.println("Healed for: " + (health + healAmount));
                jTextField1.setText(String.valueOf(newHero.getHP()));
                //System.out.println("Using greater than or equal.");
                //newHero.setPotionCount(-1);
                //jTextField6.setText(String.valueOf(newHero.getPotionCount()));
            }
            else
            {
                newHero.setHP(health + healAmount);
                System.out.println("Healed for: " + (health + healAmount));
                jTextField1.setText(String.valueOf(newHero.getHP()));
                //System.out.println("Using less than.");
                //newHero.setPotionCount(-1);
                //jTextField6.setText(String.valueOf(newHero.getPotionCount()));
            }
            //newHero.decreasePotionCount();
            jTextField6.setText(String.valueOf(newHero.getPotionCount()));
            jTextArea1.append(String.valueOf("You have been healed " + healAmount + " HP.\n"));
        }
        else
        {
            
            jTextArea1.append(String.valueOf("You are out of potions.\n"));
        }
        
        turnCounter ++;


    }                                        

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {                                         

        // TODO add your handling code here:
        //This is the ATTACK button
        
        
        int eStartHP = newEnemy.getHP();
        int hStartHP = newHero.getHP();
        int hDamage = 0;
        int eDamage = 0;
        int hHP = hStartHP;
        int eHP = eStartHP;
        int hAttack, eAttack;
        
        if(turnCounter == 0)
        {
            hAttack = newHero.attack();
            jTextField5.setText(String.valueOf(hAttack)); 
            
            eAttack = newEnemy.attack(newEnemy);
            
            eHP = eHP - hAttack;
            hHP = hHP - eAttack;
            jTextField1.setText(String.valueOf(hHP));
            jTextField4.setText(String.valueOf(eHP));
            newHero.setHP(hHP);
            newEnemy.setHP(eHP);
            
            System.out.println("Damage dealt by Enemy: " + eAttack);
            System.out.println("Hero HP: " + hHP);
            System.out.println("Damage dealt by Hero: " + hAttack);
            System.out.println("Enemy HP: " + eHP);
            turnCounter++;
        }
        else if(turnCounter > 0 && hHP > 0 && eHP > 0)
        {
            if(hHP > 0 && eHP > 0)
            {
                eHP = (int)(Float.parseFloat(jTextField4.getText()));
                hHP = (int)(Float.parseFloat(jTextField1.getText()));
                
                hAttack = newHero.attack();
                eAttack = newEnemy.attack(newEnemy);
                
                eHP = eHP - hAttack;
                hHP = hHP - eAttack;
                
                jTextField5.setText(String.valueOf(hAttack)); 
                jTextField1.setText(String.valueOf(hHP));
                jTextField4.setText(String.valueOf(eHP));
                newHero.setHP(hHP);
                newEnemy.setHP(eHP);
                
                turnCounter++;
                
                System.out.println("Number of turns: " + turnCounter);
            }

        }
        

        
        if(hHP <= 0)
        {

            jTextArea1.append("The Hero is dead!\n");
        }
        else if(eHP <= 0)
        {
            int currEXP = newHero.getExp();
            int newEXP = newEnemy.getExp();
            newHero.addEXP(newEnemy.getExp());
            
            if(currEXP >= newHero.getLevelUp())
            {
                newHero.setLevelUp();
                jTextField3.setText(String.valueOf(newHero.getExp()));
            }
            jTextField2.setText(String.valueOf(newHero.getExp()));
            jTextArea1.append("The enemy is dead!\n");
            jTextArea1.append("You gained " + newEnemy.getExp() + " EXP.\n");
            
            if(newEnemy.keyHolder())
            {
                newHero.foundKey();
                jButton12.setVisible(true);
            }
        }
 
        
        /*
        if(eHP <= 0)
        {
            System.out.println("The Enemy is dead!");
        }
        else if(hHP <= 0)
        {
            System.out.println("You have died!");
        }
        */

    }                                        

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        
        //Move South Button
        if(moveHold == false)
        {
            char newTerrain= map.moveSouth();
            ImageIcon newi2;
            String type = terrainType(newTerrain);

            if((type.toLowerCase()).equals("error"))
            {
                jTextArea1.append("You cannot move farther South!\n");
            }
            else
            {
                newi2 = new ImageIcon(type);
                    jButton7.setIcon(newi2);
            }

            System.out.println("Returned Terrrain: " + newTerrain);
            map.printMap();
            checkAttack();
        }
        else
        {
            jTextArea1.append("You have been attacked and cannot move.\n");
        }
        
        if(attacked)
        {
            //Do attack stuff
            moveHold = true;
            jTextArea1.append("You have been attacked!\n");
            
            attackGame();
            
        }
        
    }                                        

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        // Move East Button
        
        if(moveHold == false)   
        {
            char newTerrain= map.moveEast();
            ImageIcon newi2;

            String type = terrainType(newTerrain);

            if((type.toLowerCase()).equals("error"))
            {
                jTextArea1.append("You cannot move farther East!\n");
            }
            else
            {
                newi2 = new ImageIcon(type);
                    jButton7.setIcon(newi2);
            }

            System.out.println("Returned Terrrain: " + newTerrain);
            map.printMap();
            checkAttack();
        }
        else
        {
            jTextArea1.append("You have been attacked and cannot move.\n");
        }
        
        if(attacked)
        {
            //Do attack stuff
            moveHold = true;
            jTextArea1.append("You have been attacked!\n");
            
            attackGame();
            
        }

    }                                        

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        // Move West Button
        if(moveHold == false)
        {
            char newTerrain= map.moveWest();
            ImageIcon newi2;

            String type = terrainType(newTerrain);

            if((type.toLowerCase()).equals("error"))
            {
                jTextArea1.append("You cannot move farther West!\n");
            }
            else
            {
                newi2 = new ImageIcon(type);
                    jButton7.setIcon(newi2);
            }

            System.out.println("Returned Terrrain: " + newTerrain);
            map.printMap();
            checkAttack();
        }
        else
        {
            jTextArea1.append("You have been attacked and cannot move.\n");
        }
        
        if(attacked)
        {
            //Do attack stuff
            moveHold = true;
            jTextArea1.append("You have been attacked!\n");
            
            attackGame();
            
        }
    }                                        

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
    }                                         

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
        
        jPanel3.setVisible(!showINV);
        showINV = !showINV;
    }                                         

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form 
        java.awt.EventQueue.invokeLater(() -> {
            new GUI_Frame().setVisible(true);
            
        });
        
        */
        
        //Initialize Buttons
        //startGame();
        
        //Starts the Graphic Window
        runGUI();

                
        }

    // Variables declaration - do not modify                     
    private static javax.swing.JButton jButton1;
    private static javax.swing.JButton jButton10;
    private static javax.swing.JButton jButton11;
    private static javax.swing.JButton jButton12;
    private static javax.swing.JButton jButton2;
    private static javax.swing.JButton jButton3;
    private static javax.swing.JButton jButton4;
    private static javax.swing.JButton jButton5;
    private static javax.swing.JButton jButton6;
    private static javax.swing.JButton jButton7;
    private static javax.swing.JButton jButton8;
    private static javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private static javax.swing.JPanel jPanel3;
    private static javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JTextArea jTextArea1;
    private static javax.swing.JTextField jTextField1;
    private static javax.swing.JTextField jTextField2;
    private static javax.swing.JTextField jTextField3;
    private static javax.swing.JTextField jTextField4;
    private static javax.swing.JTextField jTextField5;
    private static javax.swing.JTextField jTextField6;
    private static javax.swing.JTextField jTextField7;
    private static javax.swing.JTextField jTextField8;
    private static javax.swing.JTextField jTextField9;
    // End of variables declaration                   
    
    static Random num = new Random();
    static HeroClass newHero = new HeroClass();
    static int eType;// = num.nextInt(2) + 1;
    //int eType = 3;
    //EnemyClass newEnemy = new EnemyClass(eType);       //Random Enenmy
    static EnemyClass newEnemy;
    //EnemyClass imp = new EnemyClass(1);                  //Test the Imp Enemy
    //EnemyClass wolf = new EnemyClass(2);                 //Test the Wolf Enemy
    //EnemyClass ogre = new EnemyClass(3);                 //Test the Ogre Enemy
    static int turnCounter;
    static int terrain;// = num.nextInt(2) + 1;
    static boolean attacked = false;
    static MapBuilder map = new MapBuilder();
    static boolean showINV = false;
    static boolean hasKey = false;
    static boolean moveHold = false;
    static boolean hasMoved = false;
    
    
    
    public static int CreateEnemy()
    {
        eType = num.nextInt(2) + 1;
        EnemyClass newEnemy = new EnemyClass(eType);
        return eType;
    }
    
    public static void setEnemyPic(int i)
    {
        ImageIcon pic;
        String eName = "";
        
        switch(i)
        {
            case 1:
                eName = "impguy.jpg";
                break;
            case 2:
                eName = "wolfguy.jpg";
                break;
            case 3:
                eName = "ogreguy.jpg";
                break;
        }
        
        pic = new ImageIcon(eName);
        jButton5.setIcon(pic);
        
    }
    
    
    
    public static void runGUI()
    {
        //startGame();
        
        java.awt.EventQueue.invokeLater(() -> {
            new GUI_Frame().setVisible(true);
            
            startGame();
            
        });
        
        
    }
    
    
    public static void startGame()
    {
        String tType = "";
        
        jPanel3.setVisible(showINV);
        jButton12.setVisible(hasKey);
        
        map.printMap();             //Print map before change
        
        //map.setPost(tempX, tempY);  //Set starting position
        map.setPost(2,2);
        //terrain = map.getTerrain(6, 6);
        terrain = map.getTerrain();
        
        System.out.println("Terrain Set.");
        
        map.printMap(); 
        
        //int eStartHP = newEnemy.getHP();
        int hStartHP = newHero.getHP();
        
        String name = newHero.getName();
        int hp = newHero.getHP();
        int exp = newHero.getExp();
        int expNeeded = newHero.getLevelUp();
        
        //String eName = newEnemy.getName();
        //int eHP = newEnemy.getHP();
        
        jTextField8.setText(String.valueOf(name));
        jTextField1.setText(String.valueOf(hp));
        jTextField2.setText(String.valueOf(exp));
        jTextField3.setText(String.valueOf(expNeeded));
        jTextField6.setText(String.valueOf(newHero.getPotionCount()));
        
        jPanel4.setVisible(false);
        moveHold = false;
        attacked = false;
        
        //jTextField7.setText(String.valueOf(eName));
        //jTextField4.setText(String.valueOf(eHP));
        
        ImageIcon newi2;// = new ImageIcon();
        tType = terrainType((char) terrain);
        
        
        
        if(tType.equals("error"))
        {
            jTextArea1.append("ERROR setting intial terrain!");
        }
        else
        {
            newi2 = new ImageIcon(tType);
                jButton7.setIcon(newi2);
        }
        
    }
            
    public static String terrainType(char t)
    {
        String fileName = "";
        
        switch(t)
        {
            case 'G':
                //newi2 = new ImageIcon("tallgrass.jpg");
                //jButton7.setIcon(newi2);
                fileName = "tallgrass.jpg";
                break;
            case 'F':
                fileName= "forrest.jpg";
                break;
            case 'M':
                fileName = "mountains.jpg";
                break;
            case 'T':
                fileName = "treasure.jpg";
                break;
            case 'e':
                fileName = "Error";
                break;        
        }
        return fileName;
    }
    
    /**
     *
     */
    public static void checkAttack()
    {
        int check = num.nextInt(99) +1;
        System.out.println("Generated number: " + check);
        if(check <= 60)
        {
            attacked = true;
        }
        
    }
    
    public static void attackGame()
    {
        jPanel4.setVisible(true);
        
        int enemyNum = num.nextInt(99) + 1;
        int enemyNum2;
        
        if(enemyNum <= 60)
        {
            //Create Imp enemey
            enemyNum2 = 1;
            System.out.println("Creating Imp.");
        }
        else if(enemyNum > 60 && enemyNum <= 93)
        {
            //Create Wolf enemy
            enemyNum2 = 2;
            System.out.println("Creating Wolf");
        }
        else
        {
            //Create Ogre enemy
            enemyNum2 = 3;
            System.out.println("Creating Ogre");
        }
        
        newEnemy = new EnemyClass(enemyNum2);
       
    }
}
